Introduction
Our HTML journey has been progressing very nicely. We've covered:

how to set up the skeleton of an HTML file
headings, paragraphs, images and links
font colors, sizes, and types
background colors, aligning text, bolding and italic izing font
In this course, we'll cover some important structural aspects of HTML: <table>s, <div>s, and <span>s!

What are tables?
Tables are very useful. We use them to store tabular data so it is easy to read! When you want to present information neatly in a table with rows and columns—you guessed it—the <table> tag is what you need.

There are many tags associated with tables, but it all starts with the <table> tag, so let's add that first.

Rows of information
A table is just a bunch of information arranged in rows and columns.

We use the <tr> tag to create a table row. We'll learn how to create columns shortly, and everything will start to come together. (You don't really create columns in <table>s: instead, you tell each row how many cells to have, and that determines your number of columns).

Rows of information
A table is just a bunch of information arranged in rows and columns.

We use the <tr> tag to create a table row. We'll learn how to create columns shortly, and everything will start to come together. (You don't really create columns in <table>s: instead, you tell each row how many cells to have, and that determines your number of columns).

<html>
    <head>
        <title>Table Time</title>
    </head>
    
    <body>
        
        <table border="1px">
            <tr>
                <td>One</td>
            </tr>
                <td> Two</td>
            <tr>
                <td>Three</td>
            </tr>
            
            <tr>
                
            </tr>
        </table>
        
    </body>

</html>

Mutliple Rows and Multiple Tables
<html>
    <head>
        <title>Table Time</title>
    </head>
    
    <body>
        
        <table border="1px">
            
                <tr>
                    <td>King Kong</td>
                    <td>1933</td>     
                </tr>
                
                <tr>
                    <td>Dracula</td>
                    <td>1897</td>
                </tr>
                
                <tr>
                    <td>Bride of Frankenstein</td>
                    <td>1935</td>
                </tr>
            
        </table>
        
    </body>

</html>


Head of the table
Here's the table we made earlier. It's okay, but it just looks like we have a list of famous Hollywood people (monsters?) and their birth years. To make our table look a little more like a table, we'll use the <thead> and <tbody> tags. These go within the <table> tag and stand for table head and table body, respectively.

The <head> HTML tag contains information about a web page (e.g. its title) and the <body> tag contains the contents of the web page. In the same way, the <thead> tag can be thought of as containing information about a table and the <tbody> tag containing the actual tabular data.
Table Heads
We have just added a <thead> tag above the <tbody>.
It will hold the heading for each column.

You add text to a <thead> similar to a <tbody>, like this:

<thead>
  <tr>
    <th>
      Name
    </th>
    <th>
      Favorite Color
    </th>
  </tr>
</thead>
First we have an opening <thead> tag for the table head.
Then we have an opening <tr> tag for the row. (to start the row)
After that, a <th></th> cell for the Name column heading. Notice that we use <th></th> for the table heading cells instead of<td></td>.
Then another <th></th> cell for the Favorite Color column heading.
Finally, we close the row element with a closing </tr> tag, and close out the table heading element with a closing </thead> tag.

NAMING YOUR TABLE
Our table is missing a title. We want to add a title row that goes all the way across the top.

To do so, we need to use the colspan attribute for the <th> tag. By default, table cells take up 1 column. If we want a table cell to take up the space of 3 columns instead of 1, we can set the colspan attribute to 3.

It looks like this:

<th colspan="3">3 columns across!</th>


Style that head!
Your table is starting to look great, but it's still a little bland. We've gone ahead and added some styling to the table to make it a bit easier to read. It's your job to add the finishing touches!

Feel free to play around with any of the style attributes we added; you'll learn much more about these things later during the CSS courses.

If you want to add more than one style, you just separate your styles with a semicolon, like so:

<th style="font-size:12px; color:red"></th>

EXAMPLE:
<html>
    <head>
        <title>Table Time</title>
    </head>
    
    <body>
        
        <table style="border-collapse:collapse;">
            <thead>
                <tr>
                    <th colspan="2">Famous Monsters by Birth Year</th>
                </tr>
                <tr style="border-bottom:1px solid black;">
                    <th style="padding:5px;">Famous Monster</th>
                    <th style="padding:5px;border-left:1px solid black;">Birth Year</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td style="padding:5px;">King Kong</td>
                    <td style="padding:5px;border-left:1px solid black;">1933</td>     
                </tr>
                
                <tr>
                    <td style="padding:5px;">Dracula</td>
                    <td style="padding:5px;border-left:1px solid black;">1897</td>
                </tr>
                
                <tr>
                    <td style="padding:5px;">Bride of Frankenstein</td>
                    <td style="padding:5px;border-left:1px solid black;">1944</td>
                </tr>
            </tbody>
        </table>
        
    </body>

</html>

'Div'ide and conquer
One of the most versatile structure tags available to you is the <div></div> tag. Short for "division," <div> allows you to divide your page into containers (that is, different pieces). This will come in handy when you begin learning CSS in the next unit: you'll be able to style different parts of your website individually!

Check out the Result tab. You should see three blocks: one red, one blue, and one green. Each one is its own <div> container.

Link it!
Nice work! As you can probably guess, the smart use of <div>s will eventually allow you to create visual HTML objects like sidebars, menus, and more.

Just like with images, you can make <div>s clickable by wrapping them in <a></a> tags.
Remember, the <a></a> tags go around the thing you want to make a link, like so:

<a href="website address"><div></div></a>
Example:
		<a href="http://rbywoo.com"><div style="width:50px; height:50px; background-color:yellow"></div></a>

Spantastic
While <div> allows you to divide your webpage up into pieces you can style individually, <span> allows you to control styling for smaller parts of your page, such as text. For example, if you always want the first word of your paragraphs to be red, you can wrap each first word in <span></span> tags and make them red using CSS!

		<p>This text is black, except for the word <span style="color:red">red!</span></p>
	</body>
